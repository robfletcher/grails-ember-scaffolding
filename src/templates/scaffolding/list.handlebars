<% import grails.persistence.Event %>
<h1>List</h1>
<table>
	<thead>
		<tr>
		<%  excludedProps = Event.allEvents.toList() << 'id' << 'version'
			allowedNames = domainClass.persistentProperties*.name << 'dateCreated' << 'lastUpdated'
			props = domainClass.properties.findAll { allowedNames.contains(it.name) && !excludedProps.contains(it.name) && it.type != null && !Collection.isAssignableFrom(it.type) }
			Collections.sort(props, comparator.constructors[0].newInstance([domainClass] as Object[]))
			props.eachWithIndex { p, i ->
				<th><g:message code="${domainClass.propertyName}.${p.name}.label" default="${p.naturalName}" /></th>
			}  %>
		</tr>
	</thead>
	<tbody>
	</g:each>
	</tbody>
</table>
